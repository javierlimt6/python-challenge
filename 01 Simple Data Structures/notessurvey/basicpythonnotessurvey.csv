Submission Date,Name,Python Functions,Python String Methods,Python List Methods
2020-04-13 23:53:59,,"help(); dir(); divmod(value, divisor); enumerate(iterable, start=0)",".count(); .find(); .isalnum(); .isalpha(); .isdigit(); .islower(); .isnumeric(); .isspace(); .istitle(); .isupper(); S.join(iterable); .replace(old, new, count); .split(); .startswith(); .strip()","L.append(object); L.clear(); L.count(element); L.extend(iterable); L.index(element); L.insert(n, item); L.pop(index); L.remove(element); L.reverse(); L.sort()"
2020-04-13 23:33:31,,"enumerate(iterable, start=0)",.center(); .count(); .endswith(); .find(); .index(); .isalnum(); .isalpha(); .isdecimal(); .isdigit(); .islower(); S.join(iterable); .lstrip(); .rsplit(); .rstrip(); .split(),"L.append(object); L.clear(); L.count(element); L.extend(iterable); L.index(element); L.insert(n, item); L.pop(index); L.remove(element); L.reverse(); L.sort()"
2020-04-13 23:25:01,,"type(); help(); dir(); abs(); divmod(value, divisor); enumerate(iterable, start=0)",".capitalize(); .center(); .count(); .endswith(); .find(); .index(); .isalnum(); .isalpha(); .isdecimal(); .isdigit(); .isidentifier(); .islower(); .isnumeric(); .isspace(); .istitle(); .isupper(); S.join(iterable); .ljust(); .lower(); .lstrip(); .maketrans(); .replace(old, new, count); .rfind(); .rindex(); .rjust(); .rpartition(); .rsplit(); .rstrip(); .split(); .splitlines(); .startswith(); .strip(); .swapcase(); .title(); .translate(); .upper(); .zfill()","L.append(object); L.clear(); L.count(element); L.extend(iterable); L.index(element); L.insert(n, item); L.pop(index); L.remove(element); L.reverse(); L.sort()"
2020-04-13 23:11:43,,"type(); help(); dir(); abs(); divmod(value, divisor); enumerate(iterable, start=0)",.index(); .isalpha(); .isdigit(); .islower(); .isupper(); .lower(); .lstrip(); .rsplit(); .rstrip(); .split(); .startswith(); .strip(); .upper(),"L.extend(iterable); L.index(element); L.insert(n, item); L.pop(index); L.remove(element); L.reverse(); L.sort()"
2020-04-12 18:52:53,,"type(); print(); abs(); divmod(value, divisor); enumerate(iterable, start=0)",".capitalize(); .count(); .endswith(); .find(); .index(); .isalnum(); .isalpha(); .isdecimal(); .isdigit(); .islower(); .isnumeric(); .istitle(); .isupper(); S.join(iterable); .lower(); .lstrip(); .replace(old, new, count); .split(); .startswith(); .strip(); .title(); .upper()","L.append(object); L.clear(); L.count(element); L.extend(iterable); L.index(element); L.insert(n, item); L.pop(index); L.remove(element); L.reverse(); L.sort()"
2020-04-11 21:30:02,,"abs(); divmod(value, divisor); enumerate(iterable, start=0)",".count(); .endswith(); .find(); .index(); .isalnum(); .isalpha(); .isdecimal(); .isdigit(); .isnumeric(); .replace(old, new, count); .split(); .startswith(); .strip()","L.append(object); L.count(element); L.extend(iterable); L.index(element); L.insert(n, item); L.pop(index); L.remove(element); L.reverse(); L.sort()"
2020-04-11 03:49:18,,"help(); dir(); divmod(value, divisor); enumerate(iterable, start=0)",".count(); .endswith(); .find(); .index(); .isalpha(); .isdecimal(); .isdigit(); .islower(); .isnumeric(); .isupper(); S.join(iterable); .lower(); .lstrip(); .replace(old, new, count); .split(); .startswith(); .strip(); .upper()","L.append(object); L.clear(); L.count(element); L.extend(iterable); L.index(element); L.insert(n, item); L.pop(index); L.remove(element); L.reverse(); L.sort()"
2020-04-10 19:44:10,,"divmod(value, divisor); enumerate(iterable, start=0)",.index(); .isdecimal(); .isdigit(); .isnumeric(); S.join(iterable); .strip(); .zfill(),"L.insert(n, item); L.pop(index); L.remove(element); L.reverse(); L.sort()"
2020-04-10 02:15:26,,"dir(); abs(); enumerate(iterable, start=0)",".center(); .endswith(); .isalnum(); .isalpha(); .isdecimal(); .isdigit(); S.join(iterable); .replace(old, new, count); .rsplit(); .rstrip(); .split(); .startswith(); .strip(); .zfill()","L.append(object); L.extend(iterable); L.insert(n, item); L.pop(index); L.reverse(); L.sort()"
2020-04-10 00:03:46,,"type(); help(); dir(); enumerate(iterable, start=0)",".capitalize(); .center(); .count(); .endswith(); .find(); .index(); .isalnum(); .isalpha(); .isdecimal(); .isdigit(); .isidentifier(); .islower(); .isnumeric(); .isspace(); .istitle(); .isupper(); S.join(iterable); .ljust(); .lower(); .lstrip(); .maketrans(); .replace(old, new, count); .rfind(); .rindex(); .rjust(); .rpartition(); .rsplit(); .rstrip(); .split(); .splitlines(); .startswith(); .strip(); .swapcase(); .title(); .translate(); .upper(); .zfill()","L.append(object); L.clear(); L.count(element); L.extend(iterable); L.index(element); L.insert(n, item); L.pop(index); L.remove(element); L.reverse(); L.sort()"
2020-04-09 23:43:51,,"type(); help(); print(); dir(); abs(); divmod(value, divisor); enumerate(iterable, start=0)",.count(); .find(); .index(); .isalpha(); .isdigit(); .islower(); .lower(); .lstrip(); .rstrip(); .split(); .startswith(); .strip(),"L.append(object); L.count(element); L.index(element); L.insert(n, item); L.pop(index); L.remove(element); L.reverse(); L.sort()"
2020-04-09 23:14:42,,"type(); help(); abs(); divmod(value, divisor); enumerate(iterable, start=0)",".count(); .endswith(); .find(); .index(); .isalnum(); .isalpha(); .isdecimal(); .isdigit(); .islower(); .isnumeric(); .isspace(); .isupper(); .lower(); .lstrip(); .replace(old, new, count); .split(); .splitlines(); .startswith(); .strip(); .upper()","L.append(object); L.clear(); L.count(element); L.extend(iterable); L.index(element); L.insert(n, item); L.pop(index); L.reverse(); L.sort()"
2020-04-09 22:57:49,,"divmod(value, divisor)",.splitlines(); .swapcase(); .translate(); .zfill(),"L.extend(iterable); L.insert(n, item)"
